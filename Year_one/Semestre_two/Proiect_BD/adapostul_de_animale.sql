CREATE TABLE CUSCA (
    ID_CUSCA INT PRIMARY KEY,
    NUMAR_LOCURI INT
);

CREATE TABLE SECTOR (
    ID_SECTOR INT PRIMARY KEY,
    TIP_NEVOIE VARCHAR(255),
    NUMAR_LOCURI INT
);

CREATE TABLE SECTIE (
    ID_SECTIE INT PRIMARY KEY,
    NUME VARCHAR(255),
    ID_CUSCA INT,
    FOREIGN KEY (ID_CUSCA) REFERENCES CUSCA (ID_CUSCA)
);


CREATE TABLE SECTIE_SECTOR (
    ID_SECTIE INT,
    ID_SECTOR INT,
    PRIMARY KEY (ID_SECTIE, ID_SECTOR),
    FOREIGN KEY (ID_SECTIE) REFERENCES SECTIE (ID_SECTIE),
    FOREIGN KEY (ID_SECTOR) REFERENCES SECTOR (ID_SECTOR)
);

CREATE TABLE MEDICAMENT (
    NUMAR INT PRIMARY KEY,
    DENUMIRE_PRODUS VARCHAR(255),
    CANTITATE INT
);

CREATE TABLE FARMACIE (
    ID_FARMACIE INT PRIMARY KEY,
    NUME VARCHAR(255),
    TELEFON VARCHAR(255),
    PROGRAM VARCHAR(255),
    NUMAR INT,
    FOREIGN KEY (NUMAR) REFERENCES MEDICAMENT (NUMAR)
);

--tabel asociativ intre medicament si farmacie 
CREATE TABLE MED(
    ID_FARMACIE INT,
    NUMAR INT,
    PRIMARY KEY(ID_FARMACIE, NUMAR),
    FOREIGN KEY (ID_FARMACIE) REFERENCES FARMACIE (ID_FARMACIE),
    FOREIGN KEY (NUMAR) REFERENCES MEDICAMENT (NUMAR) 
);


CREATE TABLE MAGAZIN (
    ID_MAGAZIN INT PRIMARY KEY,
    ID_CONTRACT INT,
    NUME VARCHAR(255),
    TELEFON VARCHAR(255),
    PROGRAM VARCHAR(255)
);

CREATE TABLE HRANA (
    NUMAR INT PRIMARY KEY,
    DENUMIRE_PRODUS VARCHAR(255),
    CANTITATE INT,
    ID_MAGAZIN INT,
    FOREIGN KEY (ID_MAGAZIN) REFERENCES MAGAZIN (ID_MAGAZIN)
);

CREATE TABLE VIZITATOR (
    CNP VARCHAR(13) PRIMARY KEY,
    NUME VARCHAR(255),
    PRENUME VARCHAR(255),
    TELEFON VARCHAR(255),
    EMAIL VARCHAR(255)
);

CREATE TABLE VETERINAR (
    CNP VARCHAR(13) PRIMARY KEY,
    NUME VARCHAR(255),
    PRENUME VARCHAR(255)
);


CREATE TABLE ANIMAL (
    ID_ANIMAL INT PRIMARY KEY,
    NUME VARCHAR(255),
    RASA VARCHAR(255),
    VARSTA INT,
    SEX VARCHAR(255),
    DATA_SOSIRE DATE,
    ID_CUSCA INT,
    ID_VETERINAR VARCHAR(13),
    FOREIGN KEY (ID_CUSCA) REFERENCES CUSCA (ID_CUSCA),
    FOREIGN KEY (ID_VETERINAR) REFERENCES VETERINAR (CNP)
);

CREATE TABLE CARTE_DE_SANATATE (
    ID_ANIMAL INT PRIMARY KEY,
    VACCINURI VARCHAR(255),
    DATA_NASTERE DATE,
    ANTECEDENTE_MEDICALE VARCHAR(255),
    ID_VETERINAR VARCHAR(13),
    FOREIGN KEY (ID_VETERINAR) REFERENCES VETERINAR (CNP)
);

CREATE TABLE CONSULTATIE (
    ID_CONSULTATIE INT PRIMARY KEY,
    ID_ANIMAL INT,
    DATA DATE,
    ID_VETERINAR VARCHAR(13),
    FOREIGN KEY (ID_VETERINAR) REFERENCES VETERINAR (CNP)
);

CREATE TABLE CERERE_ADOPTIE (
    SERIE VARCHAR(255),
    ID_ANIMAL INT,
    ID_VIZITATOR VARCHAR(13),
    DATA DATE,
    --APROBATA_DE_DIRECTOR BOOLEAN DEFAULT FALSE,
    PRIMARY KEY (SERIE, ID_ANIMAL, ID_VIZITATOR),
    FOREIGN KEY (ID_ANIMAL) REFERENCES ANIMAL (ID_ANIMAL),
    FOREIGN KEY (ID_VIZITATOR) REFERENCES VIZITATOR (CNP)
);

CREATE TABLE CLINICA_VETERINARA (
    ID_CLINICA INT PRIMARY KEY,
    DENUMIRE VARCHAR(255),
    ADRESA VARCHAR(255),
    TELEFON VARCHAR(255),
    EMAIL VARCHAR(255),
    ID_VETERINAR VARCHAR(13),
    FOREIGN KEY (ID_VETERINAR) REFERENCES VETERINAR (CNP)
);

CREATE TABLE CONTRACT (
    NUMAR INT PRIMARY KEY,
    DATA_EMITERE DATE,
    DURATA INT,
    TIP VARCHAR(255),
    id_magazin INT,
    id_farmacie INT,
    id_clinica INT,
    FOREIGN KEY (id_magazin) REFERENCES MAGAZIN (id_magazin),
    FOREIGN KEY (id_farmacie) REFERENCES FARMACIE (id_farmacie),
    FOREIGN KEY (id_clinica) REFERENCES CLINICA_VETERINARA (ID_CLINICA)
);


CREATE TABLE ANGAJAT (
    ID_ANGAJAT INT PRIMARY KEY,
    NUME VARCHAR(255),
    PRENUME VARCHAR(255),
    CNP VARCHAR(13),
    ADRESA VARCHAR(255),
    TELEFON VARCHAR(255),
    EMAIL VARCHAR(255),
    ID_CONTRACT INT,
    FOREIGN KEY (ID_CONTRACT) REFERENCES CONTRACT (NUMAR)
);

CREATE TABLE DIRECTOR (
    ID_DIRECTOR INT,
    ID_CONTRACT INT,
    ID_ANGAJAT INT,
    FOREIGN KEY (ID_CONTRACT) REFERENCES CONTRACT (NUMAR),
    FOREIGN KEY (ID_ANGAJAT) REFERENCES ANGAJAT (ID_ANGAJAT)
);

-- Tabela CUSCA --
INSERT INTO CUSCA (ID_CUSCA, NUMAR_LOCURI)
VALUES (1, 5);
INSERT INTO CUSCA (ID_CUSCA, NUMAR_LOCURI)
VALUES (2, 10);
INSERT INTO CUSCA (ID_CUSCA, NUMAR_LOCURI)
VALUES (3, 4);
INSERT INTO CUSCA (ID_CUSCA, NUMAR_LOCURI)
VALUES (4, 6);
INSERT INTO CUSCA (ID_CUSCA, NUMAR_LOCURI)
VALUES (5, 5);

-- Tabela SECTOR --
INSERT INTO SECTOR (ID_SECTOR, TIP_NEVOIE, NUMAR_LOCURI)
VALUES (1, 'Deparazitare interna si externa', 100);
INSERT INTO SECTOR (ID_SECTOR, TIP_NEVOIE, NUMAR_LOCURI)
VALUES (2, 'Analize de sange', 30);
INSERT INTO SECTOR (ID_SECTOR, TIP_NEVOIE, NUMAR_LOCURI)
VALUES (3, 'Vaccinari', 10);
INSERT INTO SECTOR (ID_SECTOR, TIP_NEVOIE, NUMAR_LOCURI)
VALUES (4, 'Chirurgie generala', 20);
INSERT INTO SECTOR (ID_SECTOR, TIP_NEVOIE, NUMAR_LOCURI)
VALUES (5, 'Dermatologie', 40);

-- Tabela SECTIE --
INSERT INTO SECTIE (ID_SECTIE, NUME, ID_CUSCA)
VALUES (1, 'Sectia 1', 1);
INSERT INTO SECTIE (ID_SECTIE, NUME, ID_CUSCA)
VALUES (2, 'Sectia 2', 2);
INSERT INTO SECTIE (ID_SECTIE, NUME, ID_CUSCA)
VALUES (3, 'Sectia 3', 3);
INSERT INTO SECTIE (ID_SECTIE, NUME, ID_CUSCA)
VALUES (4, 'Sectia 4', 4);
INSERT INTO SECTIE (ID_SECTIE, NUME, ID_CUSCA)
VALUES (5, 'Sectia 5', 5);

-- Tabela SECTIE_SECTOR --
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (1, 1);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (1, 2);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (1, 3);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (2, 2);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (2, 4);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (3, 3);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (3, 5);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (4, 4);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (4, 1);
INSERT INTO SECTIE_SECTOR (ID_SECTIE, ID_SECTOR)
VALUES (5, 5);

-- Tabela MEDICAMENT --
INSERT INTO MEDICAMENT (NUMAR, DENUMIRE_PRODUS, CANTITATE)
VALUES (1, 'Wyzium', 50);
INSERT INTO MEDICAMENT (NUMAR, DENUMIRE_PRODUS, CANTITATE)
VALUES (2, 'KalmVet', 50);
INSERT INTO MEDICAMENT (NUMAR, DENUMIRE_PRODUS, CANTITATE)
VALUES (3, 'RX Nutricalm', 50);
INSERT INTO MEDICAMENT (NUMAR, DENUMIRE_PRODUS, CANTITATE)
VALUES (4, 'Entero-Chronic', 50);
INSERT INTO MEDICAMENT (NUMAR, DENUMIRE_PRODUS, CANTITATE)
VALUES (5, 'Calmex', 50);

-- Tabela FARMACIE --
INSERT INTO FARMACIE (ID_FARMACIE, NUME, TELEFON, PROGRAM, NUMAR)
VALUES (1, 'ANIMAX VET SRL', '33522396', '9 AM - 6 PM', 1);
--INSERT INTO FARMACIE (ID_FARMACIE, NUME, TELEFON, PROGRAM, NUMAR)
--VALUES (1, 'ANIMAX VET SRL', '33522396', '9 AM - 6 PM', 2);
INSERT INTO FARMACIE (ID_FARMACIE, NUME, TELEFON, PROGRAM, NUMAR)
VALUES (2, 'PET BOUTIQUE', '38440980', '10 AM - 8 PM', 1);
INSERT INTO FARMACIE (ID_FARMACIE, NUME, TELEFON, PROGRAM, NUMAR)
VALUES (3, 'ANIMAL AREA', '39898404', '12 AM - 6 PM', 1);
INSERT INTO FARMACIE (ID_FARMACIE, NUME, TELEFON, PROGRAM, NUMAR)
VALUES (4, ' GROOM VET C&A SRL', '41654738', '8 AM - 8 PM', 1);
INSERT INTO FARMACIE (ID_FARMACIE, NUME, TELEFON, PROGRAM, NUMAR)
VALUES (5, 'PETMART ONLINE SRL', '32167601', '24/7', 1);


-- Tabela MAGAZIN --
INSERT INTO MAGAZIN (ID_MAGAZIN, ID_CONTRACT, NUME, TELEFON, PROGRAM)
VALUES (1, 1, 'Animax – Pet Store', '987-654-3456', '10 AM - 8 PM');
--INSERT INTO MAGAZIN (ID_MAGAZIN, ID_CONTRACT, NUME, TELEFON, PROGRAM)
--VALUES (1, 2, 'PetMart', '987-654-3210', '10 AM - 8 PM');
INSERT INTO MAGAZIN (ID_MAGAZIN, ID_CONTRACT, NUME, TELEFON, PROGRAM)
VALUES (2, 2, 'PetMart', '865-153-3210', '9 AM - 4 PM');
INSERT INTO MAGAZIN (ID_MAGAZIN, ID_CONTRACT, NUME, TELEFON, PROGRAM)
VALUES (3, 3, 'Maxi-Pet', '235-864-3210', '12 AM - 10 PM');
INSERT INTO MAGAZIN (ID_MAGAZIN, ID_CONTRACT, NUME, TELEFON, PROGRAM)
VALUES (4, 4, 'Shop4Pet', '987-654-2355', '10 AM - 8 PM');
INSERT INTO MAGAZIN (ID_MAGAZIN, ID_CONTRACT, NUME, TELEFON, PROGRAM)
VALUES (5, 5, 'PerfectPet', '987-654-3210', '10 AM - 8 PM');

-- Tabela HRANA --
INSERT INTO HRANA (NUMAR, DENUMIRE_PRODUS, CANTITATE, ID_MAGAZIN)
VALUES (1, 'Hrana uscata pentru caini Pedigree Adult', 100, 1);
INSERT INTO HRANA (NUMAR, DENUMIRE_PRODUS, CANTITATE, ID_MAGAZIN)
VALUES (2, 'Hrana uscata pentru caini Brit Premium, Adult', 120, 2);
INSERT INTO HRANA (NUMAR, DENUMIRE_PRODUS, CANTITATE, ID_MAGAZIN)
VALUES (3, 'Hrana uscata pentru caini Bosch Adult cu miel si orez', 80, 3);
INSERT INTO HRANA (NUMAR, DENUMIRE_PRODUS, CANTITATE, ID_MAGAZIN)
VALUES (4, 'Hrana umeda pentru caini Petkult Adult cu vanat', 100, 4);
INSERT INTO HRANA (NUMAR, DENUMIRE_PRODUS, CANTITATE, ID_MAGAZIN)
VALUES (5, 'Hrana umeda pentru caini Petkult Adult cu rata', 140, 5);

-- Tabela VIZITATOR --
INSERT INTO VIZITATOR (CNP, NUME, PRENUME, TELEFON, EMAIL)
VALUES ('1891123456789', 'Ion', 'Popescu', '0721123456', 'ion.popescu@example.com');
INSERT INTO VIZITATOR (CNP, NUME, PRENUME, TELEFON, EMAIL)
VALUES ('2900501234567', 'Elena', 'Ionescu', '0750123456', 'elena.ionescu@example.com');
INSERT INTO VIZITATOR (CNP, NUME, PRENUME, TELEFON, EMAIL)
VALUES ('1810412345678', 'Mihai', 'Georgescu', '0741123456', 'mihai.georgescu@example.com');
INSERT INTO VIZITATOR (CNP, NUME, PRENUME, TELEFON, EMAIL)
VALUES ('2930412345678', 'Maria', 'Stefanescu', '0771123456', 'maria.stefanescu@example.com');
INSERT INTO VIZITATOR (CNP, NUME, PRENUME, TELEFON, EMAIL)
VALUES ('1971001234567', 'Andrei', 'Popa', '0730123456', 'andrei.popa@example.com');


-- Tabela VETERINAR --
INSERT INTO VETERINAR (CNP, NUME, PRENUME)
VALUES ('1820701234567', 'Mihai', 'Popescu');
INSERT INTO VETERINAR (CNP, NUME, PRENUME)
VALUES ('1910501234567', 'Ana', 'Ionescu');
INSERT INTO VETERINAR (CNP, NUME, PRENUME)
VALUES ('1950412345678', 'Maria', 'Georgescu');
INSERT INTO VETERINAR (CNP, NUME, PRENUME)
VALUES ('1860301234567', 'Ion', 'Stefanescu');
INSERT INTO VETERINAR (CNP, NUME, PRENUME)
VALUES ('1830412345678', 'Elena', 'Popa');


-- Tabela ANIMAL --
INSERT INTO ANIMAL (ID_ANIMAL, NUME, RASA, VARSTA, SEX, DATA_SOSIRE, ID_CUSCA, ID_VETERINAR)
VALUES (1, 'Rex', 'Cocker Spaniel', 3, 'Masculin', TO_DATE('2022-01-15', 'YYYY-MM-DD'), 1, '1820701234567');
INSERT INTO ANIMAL (ID_ANIMAL, NUME, RASA, VARSTA, SEX, DATA_SOSIRE, ID_CUSCA, ID_VETERINAR)
VALUES (2, 'Lola', 'Beagle', 2, 'Feminin', TO_DATE('2023-03-22', 'YYYY-MM-DD'), 1, '1910501234567');
INSERT INTO ANIMAL (ID_ANIMAL, NUME, RASA, VARSTA, SEX, DATA_SOSIRE, ID_CUSCA, ID_VETERINAR)
VALUES (3, 'Max', 'Labrador Retriever', 1, 'Masculin', TO_DATE('2023-05-10', 'YYYY-MM-DD'), 2, '1950412345678');
INSERT INTO ANIMAL (ID_ANIMAL, NUME, RASA, VARSTA, SEX, DATA_SOSIRE, ID_CUSCA, ID_VETERINAR)
VALUES (4, 'Daisy', 'Golden Retriever', 2, 'Feminin', TO_DATE('2023-02-18', 'YYYY-MM-DD'), 2, '1860301234567');
INSERT INTO ANIMAL (ID_ANIMAL, NUME, RASA, VARSTA, SEX, DATA_SOSIRE, ID_CUSCA, ID_VETERINAR)
VALUES (5, 'Rocky', 'German Shepherd', 4, 'Masculin', TO_DATE('2022-11-05', 'YYYY-MM-DD'), 3, '1830412345678');


-- Tabela CARTE_DE_SANATATE --
INSERT INTO CARTE_DE_SANATATE (ID_ANIMAL, VACCINURI, DATA_NASTERE, ANTECEDENTE_MEDICALE, ID_VETERINAR)
VALUES (1, 'Vaccin Leptospiroza, Vaccin Parvoviroza', TO_DATE('2019-05-12', 'YYYY-MM-DD'), 'Niciuna', '1820701234567');
INSERT INTO CARTE_DE_SANATATE (ID_ANIMAL, VACCINURI, DATA_NASTERE, ANTECEDENTE_MEDICALE, ID_VETERINAR)
VALUES (2, 'Vaccin Leucemie Felina, Vaccin Rabie', TO_DATE('2023-03-22', 'YYYY-MM-DD'), 'Vaccin alergie', '1910501234567');
INSERT INTO CARTE_DE_SANATATE (ID_ANIMAL, VACCINURI, DATA_NASTERE, ANTECEDENTE_MEDICALE, ID_VETERINAR)
VALUES (3, 'Vaccin Parvoviroza, Vaccin Distemper', TO_DATE('2023-05-10', 'YYYY-MM-DD'), 'Niciuna', '1950412345678');
INSERT INTO CARTE_DE_SANATATE (ID_ANIMAL, VACCINURI, DATA_NASTERE, ANTECEDENTE_MEDICALE, ID_VETERINAR)
VALUES (4, 'Vaccin Rabie, Vaccin Parainfluenza', TO_DATE('2023-02-18', 'YYYY-MM-DD'), 'Vaccin diabet', '1860301234567');
INSERT INTO CARTE_DE_SANATATE (ID_ANIMAL, VACCINURI, DATA_NASTERE, ANTECEDENTE_MEDICALE, ID_VETERINAR)
VALUES (5, 'Vaccin Bordeteloza, Vaccin Parvoviroza', TO_DATE('2022-11-05', 'YYYY-MM-DD'), 'Niciuna', '1830412345678');


-- Tabela CONSULTATIE --
INSERT INTO CONSULTATIE (ID_CONSULTATIE, ID_ANIMAL, DATA, ID_VETERINAR)
VALUES (2, 3, TO_DATE('2023-08-01', 'YYYY-MM-DD'), '1950412345678');
INSERT INTO CONSULTATIE (ID_CONSULTATIE, ID_ANIMAL, DATA, ID_VETERINAR)
VALUES (3, 2, TO_DATE('2023-08-02', 'YYYY-MM-DD'), '1910501234567');
INSERT INTO CONSULTATIE (ID_CONSULTATIE, ID_ANIMAL, DATA, ID_VETERINAR)
VALUES (4, 5, TO_DATE('2023-08-03', 'YYYY-MM-DD'), '1830412345678');
INSERT INTO CONSULTATIE (ID_CONSULTATIE, ID_ANIMAL, DATA, ID_VETERINAR)
VALUES (5, 4, TO_DATE('2023-08-04', 'YYYY-MM-DD'), '1860301234567');


-- Tabela CERERE_ADOPTIE --
INSERT INTO CERERE_ADOPTIE (SERIE, ID_ANIMAL, ID_VIZITATOR, DATA)
VALUES ('DEF456', 3, '1971001234567', TO_DATE('2023-08-02', 'YYYY-MM-DD'));
INSERT INTO CERERE_ADOPTIE (SERIE, ID_ANIMAL, ID_VIZITATOR, DATA)
VALUES ('GHI789', 2, '1810412345678', TO_DATE('2023-08-03', 'YYYY-MM-DD'));
INSERT INTO CERERE_ADOPTIE (SERIE, ID_ANIMAL, ID_VIZITATOR, DATA)
VALUES ('JKL012', 5, '2900501234567', TO_DATE('2023-08-04', 'YYYY-MM-DD'));
INSERT INTO CERERE_ADOPTIE (SERIE, ID_ANIMAL, ID_VIZITATOR, DATA)
VALUES ('MNO345', 4, '2930412345678', TO_DATE('2023-08-05', 'YYYY-MM-DD'));


-- Tabela CLINICA_VETERINARA --
INSERT INTO CLINICA_VETERINARA (ID_CLINICA, DENUMIRE, ADRESA, TELEFON, EMAIL, ID_VETERINAR)
VALUES (1, 'Clinica Veterinara "VetCare"', 'Strada Vesela, nr. 789', '555-111-2222', 'vetcare@example.com', '1830412345678');
INSERT INTO CLINICA_VETERINARA (ID_CLINICA, DENUMIRE, ADRESA, TELEFON, EMAIL, ID_VETERINAR)
VALUES (2, 'Clinica Veterinara "AnimalCare"', 'Strada Centrala, nr. 456', '555-987-6543', 'clinicavet@example.com', '1950412345678');
INSERT INTO CLINICA_VETERINARA (ID_CLINICA, DENUMIRE, ADRESA, TELEFON, EMAIL, ID_VETERINAR)
VALUES (3, 'Clinica Veterinara "VetExpert"', 'Strada Mica, nr. 789', '555-456-7890', 'vetexpert@example.com', '1820701234567');
INSERT INTO CLINICA_VETERINARA (ID_CLINICA, DENUMIRE, ADRESA, TELEFON, EMAIL, ID_VETERINAR)
VALUES (4, 'Clinica Veterinara "PetHealth"', 'Strada Mare, nr. 101', '555-789-0123', 'pethealth@example.com', '1910501234567');
INSERT INTO CLINICA_VETERINARA (ID_CLINICA, DENUMIRE, ADRESA, TELEFON, EMAIL, ID_VETERINAR)
VALUES (5, 'Clinica Veterinara "HappyPets"', 'Strada Munte, nr. 543', '555-012-3456', 'happypets@example.com', '1860301234567');



-- Tabela CONTRACT --
INSERT INTO CONTRACT (NUMAR, DATA_EMITERE, DURATA, TIP, id_magazin, id_farmacie, id_clinica)
VALUES (101, TO_DATE('2023-07-15', 'YYYY-MM-DD'), 2, 'Servicii Veterinare', 1, NULL, 2);
INSERT INTO CONTRACT (NUMAR, DATA_EMITERE, DURATA, TIP, id_magazin, id_farmacie, id_clinica)
VALUES (102, TO_DATE('2023-07-16', 'YYYY-MM-DD'), 2, 'Consultatii Medicale', 2, 1, 3);
INSERT INTO CONTRACT (NUMAR, DATA_EMITERE, DURATA, TIP, id_magazin, id_farmacie, id_clinica)
VALUES (103, TO_DATE('2023-07-17', 'YYYY-MM-DD'), 2, 'Analize Medicale', 3, 3, 1);
INSERT INTO CONTRACT (NUMAR, DATA_EMITERE, DURATA, TIP, id_magazin, id_farmacie, id_clinica)
VALUES (104, TO_DATE('2023-07-18', 'YYYY-MM-DD'), 2, 'Chirurgie Veterinara', 4, 2, 5);
INSERT INTO CONTRACT (NUMAR, DATA_EMITERE, DURATA, TIP, id_magazin, id_farmacie, id_clinica)
VALUES (105, TO_DATE('2023-07-19', 'YYYY-MM-DD'), 2, 'Vaccinari Animale', 5, 5, 4);



-- Tabela ANGAJAT --
INSERT INTO ANGAJAT (ID_ANGAJAT, NUME, PRENUME, CNP, ADRESA, TELEFON, EMAIL, ID_CONTRACT)
VALUES (1, 'Ana', 'Popa', '5678901234567', 'Strada Angajatului, nr. 6', '555-555-6666', 'ana@example.com', 101);
INSERT INTO ANGAJAT (ID_ANGAJAT, NUME, PRENUME, CNP, ADRESA, TELEFON, EMAIL, ID_CONTRACT)
VALUES (2, 'Maria', 'Popescu', '1234567890123', 'Strada Angajatului, nr. 2', '555-111-2222', 'maria@example.com', 102);
INSERT INTO ANGAJAT (ID_ANGAJAT, NUME, PRENUME, CNP, ADRESA, TELEFON, EMAIL, ID_CONTRACT)
VALUES (3, 'Ion', 'Ionescu', '2345678901234', 'Strada Angajatului, nr. 3', '555-222-3333', 'ion@example.com', 103);
INSERT INTO ANGAJAT (ID_ANGAJAT, NUME, PRENUME, CNP, ADRESA, TELEFON, EMAIL, ID_CONTRACT)
VALUES (4, 'Elena', 'Georgescu', '3456789012345', 'Strada Angajatului, nr. 4', '555-333-4444', 'elena@example.com', 104);
INSERT INTO ANGAJAT (ID_ANGAJAT, NUME, PRENUME, CNP, ADRESA, TELEFON, EMAIL, ID_CONTRACT)
VALUES (5, 'Mihai', 'Stefănescu', '4567890123456', 'Strada Angajatului, nr. 5', '555-444-5555', 'mihai@example.com', 105);

-- Sterg constragerile pentru tabela director, deoarece exista un singur director
--ALTER TABLE DIRECTOR
--DROP CONSTRAINT SYS_C00129012018;

-- Tabela DIRECTOR --
INSERT INTO DIRECTOR (ID_DIRECTOR, ID_CONTRACT, ID_ANGAJAT)
VALUES (1, 101, 1);
INSERT INTO DIRECTOR (ID_DIRECTOR, ID_CONTRACT, ID_ANGAJAT)
VALUES (1, 102, 2);
INSERT INTO DIRECTOR (ID_DIRECTOR, ID_CONTRACT, ID_ANGAJAT)
VALUES (1, 103, 3);
INSERT INTO DIRECTOR (ID_DIRECTOR, ID_CONTRACT, ID_ANGAJAT)
VALUES (1, 104, 4);
INSERT INTO DIRECTOR (ID_DIRECTOR, ID_CONTRACT, ID_ANGAJAT)
VALUES (1, 105, 5);


--CERINTA 12
-- Cereri SQL complexe
--1. Vom realiza o interogare care să afișeze numele și prenumele angajatului care ocupă
--funcția de director și să afișeze denumirea clinicii veterinare unde lucrează ca director.
SELECT A.NUME, A.PRENUME, CV.DENUMIRE
FROM ANGAJAT A
JOIN DIRECTOR D ON A.ID_ANGAJAT = D.ID_ANGAJAT
JOIN CLINICA_VETERINARA CV ON D.ID_CONTRACT = CV.ID_CLINICA;


--2. Vom realiza o interogare care să afișeze denumirea farmaciei,denumirea medicamentului,
--și cantitatea disponibilă pentru fiecare medicament din tabela MEDICAMENT.
SELECT F.NUME AS "DENUMIRE FARMACIE", M.DENUMIRE_PRODUS AS "DENUMIRE MEDICAMENT", M.CANTITATE AS "CANTITATE DISPONIBILA"
FROM FARMACIE F
JOIN MEDICAMENT M ON F.NUMAR = M.NUMAR;


--3. Vom realiza o interogare care să afișeze numele și prenumele vizitatorilor care au depus cereri de adopție în ordine alfabetică.
SELECT NUME, PRENUME
FROM VIZITATOR
WHERE CNP IN (SELECT ID_VIZITATOR FROM CERERE_ADOPTIE)
ORDER BY NUME, PRENUME;

--4. Vom realiza o interogare care să afișeze numele și prenumele veterinarilor care au efectuat consultații la animale
--și să afișeze numărul total de consultații pentru fiecare veterinar.
SELECT V.NUME, V.PRENUME, COUNT(*) AS "NUMAR CONSULTATII"
FROM VETERINAR V
JOIN CONSULTATIE C ON V.CNP = C.ID_VETERINAR
GROUP BY V.NUME, V.PRENUME;

--5. Vom realiza o interogare care să afișeze numărul total de animale din fiecare secție 
--și să ordoneze rezultatele descrescător după numărul de animale.
SELECT S.NUME AS "NUME SECTIE", COUNT(A.ID_ANIMAL) AS "NUMAR ANIMALE"
FROM SECTIE S
LEFT JOIN ANIMAL A ON S.ID_CUSCA = A.ID_CUSCA
GROUP BY S.NUME
ORDER BY "NUMAR ANIMALE" DESC;


-- Cerinta 13
-- Implementarea a 3 operatii de actualizare si de suprimare a datelor utilizând subcereri.
--1. Actualizarea denumirii unui medicament în toate farmaciile:
UPDATE MEDICAMENT
SET DENUMIRE_PRODUS = 'Nume_Nou_Medicament'
WHERE NUMAR = (
    SELECT NUMAR
    FROM MEDICAMENT
    WHERE DENUMIRE_PRODUS = 'Nume_Vechi_Medicament'
);

--2. Ștergerea tuturor animalelor dintr-o secție specifică:
INSERT INTO CERERE_ADOPTIE (SERIE, ID_ANIMAL, ID_VIZITATOR, DATA)
VALUES ('Seria_Cerere', 
        (SELECT ID_ANIMAL FROM ANIMAL WHERE NUME = 'Nume_Animal'), 
        (SELECT CNP FROM VIZITATOR WHERE NUME = 'Nume_Vizitator'),
        'Data_Cerere');

-- Ștergerea tuturor animalelor dintr-o secție specifică:
DELETE FROM ANIMAL
WHERE ID_CUSCA IN (
    SELECT ID_CUSCA
    FROM SECTIE
    WHERE NUME = 'Nume_Sectie'
);


--Ștergerea tuturor vizitatorilor care au depus cereri de adopție înainte de o anumită dată:
DELETE FROM VIZITATOR
WHERE CNP IN (
    SELECT ID_VIZITATOR
    FROM CERERE_ADOPTIE
    WHERE DATA < TO_DATE('2023-01-01', 'YYYY-MM-DD')
);


--3. Adăugarea unui nou vizitator care a depus o cerere de adopție în tabelul CERERE_ADOPTIE:
INSERT INTO CERERE_ADOPTIE (SERIE, ID_ANIMAL, ID_VIZITATOR, DATA)
VALUES ('Seria_Cerere', 
        (SELECT ID_ANIMAL FROM ANIMAL WHERE NUME = 'Nume_Animal'), 
        (SELECT CNP FROM VIZITATOR WHERE NUME = 'Nume_Vizitator'),
        'Data_Cerere');


--14. Operația outerjoin pe minimum 4 tabele
SELECT *
FROM ANIMAL A
LEFT JOIN CUSCA C ON A.ID_CUSCA = C.ID_CUSCA
LEFT JOIN SECTIE S ON A.ID_CUSCA = S.ID_CUSCA
LEFT JOIN SECTIE_SECTOR SS ON S.ID_SECTIE = SS.ID_SECTIE
LEFT JOIN SECTOR SE ON SS.ID_SECTOR = SE.ID_SECTOR;


--Cerere care utilizează operația division
--Să presupunem că dorim să găsim animalele care au fost consultate de toți veterinarilor existenți. Vom folosi divizarea pentru a realiza acest lucru:
SELECT A.ID_ANIMAL, A.NUME
FROM ANIMAL A
WHERE NOT EXISTS (
    SELECT C.CNP -- Fix the alias here to match the table VETERINAR's primary key column
    FROM VETERINAR C
    WHERE NOT EXISTS (
        SELECT *
        FROM CONSULTATIE CONS
        WHERE CONS.ID_VETERINAR = C.CNP -- Fix the alias here to match the table VETERINAR's primary key column
          AND CONS.ID_ANIMAL = A.ID_ANIMAL
    )
);

--Cerere care implementează analiza top-n
-- dorim să găsim 3 cele mai frecvente medicamente vândute în farmacii:
SELECT M.DENUMIRE_PRODUS, COUNT(*) AS NUMAR_VANZARI
FROM MEDICAMENT M
JOIN MED ME ON M.NUMAR = ME.NUMAR
GROUP BY M.DENUMIRE_PRODUS
ORDER BY NUMAR_VANZARI DESC
FETCH FIRST 3 ROWS ONLY;


-- 16
--Expresia algebrică optimizată
RESULT <- π NUME, PRENUME, NUME_CLINICA
          (σ TIP = 'Servicii Veterinare' AND NUMAR = ID_CONTRACT AND ID_ANGAJAT = ID_DIRECTOR (CONTRACT ⨝ DIRECTOR ⨝ ANGAJAT))
                    (ANGAJAT ⨝ CLINICA_VETERINARA)

--Arborele algebric optimizat
              π NUME, PRENUME, NUME_CLINICA
                 |
              σ TIP = 'Servicii Veterinare' AND NUMAR = ID_CONTRACT AND ID_ANGAJAT = ID_DIRECTOR
                 |
           ⋈ CONTRACT (ID_CONTRACT) = NUMAR ⋈ DIRECTOR (ID_ANGAJAT = ID_DIRECTOR) ⋈ ANGAJAT
                 |
              ⋈
                 |
          CLINICA_VETERINARA



--Optimizarea unei cereri
SELECT A.NUME, A.PRENUME, CV.DENUMIRE AS NUME_CLINICA
FROM ANGAJAT A
JOIN DIRECTOR D ON A.ID_ANGAJAT = D.ID_ANGAJAT
JOIN CONTRACT C ON D.ID_CONTRACT = C.NUMAR AND C.TIP = 'Servicii Veterinare'
JOIN CLINICA_VETERINARA CV ON C.ID_CLINICA = CV.ID_CLINICA;



-- Cererea 17a: Realizarea normalizarii BCNF, FN4, FN5

-- Cererea 17b: Aplicarea denormalizarii, justificând necesitatea acesteia
-- Exemplu de denormalizare prin ad?ugarea unei coloane redundante în tabelul ANIMAL
ALTER TABLE ANIMAL ADD COLUMN NUME_VETERINAR VARCHAR(255);
UPDATE ANIMAL a
SET NUME_VETERINAR = (
    SELECT v.NUME
    FROM VETERINAR v
    WHERE v.CNP = a.ID_VETERINAR
);
